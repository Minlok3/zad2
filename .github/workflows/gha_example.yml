name: GHAction example  

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest
      
    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4
      
      -
        name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/example
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}   

      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/example:cache  
          tags: ${{ steps.meta.outputs.tags }}
      - 
        name: Docker Scout scan
        id: scout
        uses: docker/scout-action@v1
        with:
          command: cves
          platform: linux/amd64
          image: ${{ steps.meta.outputs.tags[0] }}

      - 
        name: Fail if there are critical or high vulnerabilities
        if: ${{ success() && steps.scout.outcome == 'success' }}
        run: |
          critical_vulns=$(echo "$SCOUT_RESULTS" | jq '.vulnerabilities | map(select(.severity == "CRITICAL")) | length')
          high_vulns=$(echo "$SCOUT_RESULTS" | jq '.vulnerabilities | map(select(.severity == "HIGH")) | length')
          if [ "$critical_vulns" -gt 0 ] || [ "$high_vulns" -gt 0 ]; then
            echo "Image has $critical_vulns critical vulnerabilities and $high_vulns high vulnerabilities"
            exit 1
          else
            echo "No critical or high vulnerabilities found"
          fi
        env:
          SCOUT_RESULTS: ${{ steps.scout.outputs.results }}

      - 
        name: Login to GitHub Container Registry
        if: success()
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_GITHUB_TOKEN }}

      - 
        name: Push Docker image to GitHub Container Registry
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ vars.MY_GITHUB_LOWERCASE_USERNAME }}/docker-zadanie2:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}